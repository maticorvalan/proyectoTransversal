/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import entidades.Materia;
import javax.swing.table.DefaultTableModel;
import persistencia.Conexion;
import persistencia.InscripcionData;
import entidades.Alumno;
import entidades.Inscripcion;
import entidades.Materia;
import java.util.ArrayList;
import java.util.List;
import persistencia.AlumnoData;
import persistencia.MateriaData;
/**
 *
 * @author Valentino
 */
public class FormularioInscripcio extends javax.swing.JInternalFrame {
    private Conexion conexion = new Conexion("jdbc:mysql://localhost/universidad", "root", "");
    private MateriaData materiaData = new MateriaData(conexion);
    private InscripcionData InscripData = new persistencia.InscripcionData(conexion);
    private AlumnoData AlumData = new persistencia.AlumnoData(conexion);
    private List<Materia> ListaMat;
    private List<Alumno> ListaAlum;
    private List<Inscripcion> ListaInsc;
            
    public FormularioInscripcio() {
        initComponents();
        armarTabla();
        ListaAlum = AlumData.listaAlumno();
        mostrarAlum();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AlumnoBox = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        MatInscriptas = new javax.swing.JRadioButton();
        MatNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInsc = new javax.swing.JTable();
        Inscribir = new javax.swing.JButton();
        AnularInsc = new javax.swing.JButton();
        Salir = new javax.swing.JButton();

        jLabel1.setText("Formulario de Inscripciones");

        jLabel2.setText("Selecciona un Alumno:");

        AlumnoBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlumnoBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Listado de Materias");

        MatInscriptas.setText("Materias Inscriptas");
        MatInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatInscriptasActionPerformed(evt);
            }
        });

        MatNoInscriptas.setText("Materias no Inscriptas");
        MatNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MatNoInscriptasActionPerformed(evt);
            }
        });

        jTableInsc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Descripcion"
            }
        ));
        jScrollPane1.setViewportView(jTableInsc);

        Inscribir.setText("Incribir");
        Inscribir.setEnabled(false);
        Inscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InscribirActionPerformed(evt);
            }
        });

        AnularInsc.setText("Anular Inscripcion");
        AnularInsc.setEnabled(false);
        AnularInsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnularInscActionPerformed(evt);
            }
        });

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(jLabel2)
                        .addGap(58, 58, 58)
                        .addComponent(AlumnoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(MatInscriptas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MatNoInscriptas)
                        .addGap(38, 38, 38)))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(229, 229, 229))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(255, 255, 255))))
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Inscribir)
                        .addGap(90, 90, 90)
                        .addComponent(AnularInsc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Salir)
                        .addGap(101, 101, 101))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(AlumnoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MatNoInscriptas)
                    .addComponent(MatInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Inscribir)
                    .addComponent(AnularInsc)
                    .addComponent(Salir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AlumnoBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlumnoBoxActionPerformed
        MatInscriptas.setSelected(false);
        MatNoInscriptas.setSelected(false);
        Limpiar();
        if (AlumnoBox.getSelectedItem() == null) {
            MatNoInscriptas.setEnabled(false);
            MatInscriptas.setEnabled(false);
        } else {
            MatNoInscriptas.setEnabled(true);
            MatInscriptas.setEnabled(true);
        }
    }//GEN-LAST:event_AlumnoBoxActionPerformed

    private void MatInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatInscriptasActionPerformed

       Limpiar();
       MatNoInscriptas.setSelected(false);
       inscript();
       Inscribir.setEnabled(false);
       AnularInsc.setEnabled(true);
    }//GEN-LAST:event_MatInscriptasActionPerformed

    private void MatNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MatNoInscriptasActionPerformed
       Limpiar();
       MatInscriptas.setSelected(false);
       noInscript();
       Inscribir.setEnabled(true);
       AnularInsc.setEnabled(false);
    }//GEN-LAST:event_MatNoInscriptasActionPerformed

    private void InscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InscribirActionPerformed
       int selc = jTableInsc.getSelectedRow();
       if(selc != -1){
           Alumno a = (Alumno)AlumnoBox.getSelectedItem();
           int id = (Integer)modelo.getValueAt(selc, 0);
           String nam = (String)modelo.getValueAt(selc, 1);
           String desc = (String)modelo.getValueAt(selc, 2);
           Materia m = new Materia (id, nam, desc, true);
           Inscripcion insc = new Inscripcion(a, m, 0);
           InscripData.guardarInscripcion(insc);
           Limpiar();
       }
    }//GEN-LAST:event_InscribirActionPerformed

    private void AnularInscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnularInscActionPerformed
     int selc = jTableInsc.getSelectedRow();
       if(selc != -1){
           Alumno a = (Alumno)AlumnoBox.getSelectedItem();
           int id = (Integer)modelo.getValueAt(selc, 0);
           InscripData.borrarInscripcionMateriaAlumno(a.getIdAlumno(), id);
           Limpiar();
       }
    }//GEN-LAST:event_AnularInscActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        dispose();
    }//GEN-LAST:event_SalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> AlumnoBox;
    private javax.swing.JButton AnularInsc;
    private javax.swing.JButton Inscribir;
    private javax.swing.JRadioButton MatInscriptas;
    private javax.swing.JRadioButton MatNoInscriptas;
    private javax.swing.JButton Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableInsc;
    // End of variables declaration//GEN-END:variables
 
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable(int fila, int columna){
            return false;
        }
    };
       private void mostrarAlum(){
           AlumnoBox.addItem(null);
           for(Alumno a : ListaAlum){
               AlumnoBox.addItem(a);
           }
           MatNoInscriptas.setEnabled(false);
           MatInscriptas.setEnabled(false);
       }
        private void armarTabla(){
            modelo.addColumn("Codigo"); 
            modelo.addColumn("Materia");
            modelo.addColumn("Descripcion"); 
            jTableInsc.setModel(modelo);
    }
       
       private void Limpiar(){
           int i = modelo.getRowCount() -1;
           for (int e = i; e>=0;e--){
               modelo.removeRow(e);
           }
          
       }
       
       private void inscript(){
           Alumno A = (Alumno)AlumnoBox.getSelectedItem();
           ListaMat = InscripData.obtenerMateriasCursadas(A.getIdAlumno());
           for (Materia mat: ListaMat){
               modelo.addRow(new Object[] {
                   mat.getId_materia(),
                   mat.getNombre(),
                   mat.getDescripción()
               });
           }
       }
       
       private void noInscript(){
           Alumno A = (Alumno)AlumnoBox.getSelectedItem();
           ListaMat = (List)InscripData.obtenerMateriasNOCursadas(A.getIdAlumno());
           for (Materia m: ListaMat){
               modelo.addRow(new Object[] {m.getId_materia(), m.getNombre(), m.getDescripción()}); 
         
           }
       }
}

